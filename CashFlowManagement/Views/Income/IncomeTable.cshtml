@model CashFlowManagement.ViewModels.IncomeListViewModel
@using CashFlowManagement.Constants
@using CashFlowManagement.Utilities
@using CashFlowManagement.EntityModel
@{
    ViewBag.Title = "IncomeTable";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    string title = string.Empty;
    string type = string.Empty;
    if (Model.Type == (int)Constants.INCOME_TYPE.SALARY_INCOME)
    {
        title = "Thu nhập từ lương";
    }
}

<ol class="breadcrumb">
    <li class="active">@title</li>
</ol>

<div class="background">
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#create-new-income-modal">
        <span class="glyphicon glyphicon-plus"></span>
        @if (Model.Type == (int)Constants.INCOME_TYPE.SALARY_INCOME)
        {
            @Html.Raw("Tạo mới")
        }
    </button>
    <div class="asset-table">
        <table class="table table-bordered table-condensed table-responsive">
            <thead>
                <tr>
                    @if (Model.Type == (int)Constants.INCOME_TYPE.SALARY_INCOME)
                    {
                        <th class="text-center">Thu nhập từ lương</th>
                        <th class="text-center">Ngày nhận lương hàng tháng</th>
                        <th class="text-center">Tháng bắt đầu</th>
                        <th class="text-center">Tháng kết thúc</th>
                        <th class="text-center">Thu nhập tháng</th>
                        <th class="text-center">Thu nhập năm</th>
                        <th class="text-center">Ghi chú</th>
                        <th class="text-center">Chỉnh sửa</th>
                    }
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td><strong>Tổng</strong></td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(Model.TotalMonthlyIncome)</strong></td>
                    <td><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(Model.TotalMonthlyIncome * 12)</strong></td>
                    <td></td>
                    <td></td>
                </tr>
                @if (Model.List.Any())
                {
                    foreach (var item in Model.List)
                    {
                        <tr>
                            <td>@item.Name</td>
                            <td>@FormatUtility.DisplayThousandSeparatorsForNumber(item.IncomeDay.Value)</td>
                            <td>@item.StartDate.ToString("MM/yyyy")</td>
                            <td>@(item.EndDate.HasValue ? item.EndDate.Value.ToString("MM/yyyy") : string.Empty)</td>
                            <td>@FormatUtility.DisplayThousandSeparatorsForNumber(item.Value)</td>
                            <td>@FormatUtility.DisplayThousandSeparatorsForNumber(item.Value * 12)</td>
                            <td>@item.Note</td>
                            <td class="text-center" width="160px">
                                <button class="btn btn-success update-income" data-income-id="@item.Id">
                                    <span class="glyphicon glyphicon-pencil"></span>
                                    Cập nhật
                                </button>
                                <button class="btn btn-danger delete-income" data-income-id="@item.Id">
                                    <span class="glyphicon glyphicon-remove"></span>
                                    Xóa
                                </button>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="8" class="text-center">Không có dữ liệu</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="income-modal">
    @{ Html.RenderPartial("_IncomeModal", new Incomes
        {
            IncomeType = Model.Type
        }); }
</div>

<div class="update-modal">

</div>


<script type="text/javascript" src="~/Scripts/income.js"></script>
<script type="text/javascript">
    var Url = new Object();
    Url.CreateIncome = '@Url.Action("CreateIncome", "Income")';
    Url.LoadTable = '@Url.Action("IncomeTable", "Income")';
    Url.LoadIncome = '@Url.Action("_IncomeUpdateModal", "Income")';
    Url.UpdateIncome = '@Url.Action("UpdateIncome", "Income")';
    Url.DeleteIncome = '@Url.Action("DeleteIncome", "Income")';
    var incomeType = @Model.Type;
</script>