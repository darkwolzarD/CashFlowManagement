@using CashFlowManagement.Utilities
@model CashFlowManagement.ViewModels.Business.BusinessListViewModel

@{
    double count = 0;
    int rsCount = 0;
    int childCount = 0;
}

<table class="table table-bordered table-striped real-estate-table">
    <thead>
        <tr>
            <th class="text-center" width="200">Kinh doanh</th>
            <th class="text-center">Thu hàng tháng</th>
            <th class="text-center">Thu hàng năm</th>
            <th class="text-center">Giá trị góp vốn</th>
            <th colspan="8"></th>
            <th><strong>Today: @(DateTime.Now.ToString("MM/yyyy"))</strong></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.ListBusinessInfoViewModel != null && Model.ListBusinessInfoViewModel.Count > 0)
        {
            foreach (var item in Model.ListBusinessInfoViewModel)
            {
                <tr class="rs-@rsCount">
                    <td class="hidden">
                        <span class="real-estate-id">@item.Business.Id</span>
                    </td>
                    <td class="text-center" rowspan="@(item.Business.BusinessLoan != null && item.Business.BusinessLoan.Count > 3 ? item.Business.BusinessLoan.Count - 2 : 3)" style="vertical-align: middle">@item.Business.Source</td>
                    <td>@FormatUtility.DisplayThousandSeparatorsForNumber(item.Business.Income)</td>
                    <td>@FormatUtility.DisplayThousandSeparatorsForNumber(item.Business.Income * 12)</td>
                    <td>@FormatUtility.DisplayThousandSeparatorsForNumber(item.Business.CapitalValue)</td>
                    <td class="text-center" colspan="9">
                        <button class="btn btn-success update-real-estate">
                            <span class="glyphicon glyphicon-pencil"></span>
                        </button>
                        <button class="btn btn-danger delete-real-estate">
                            <span class="glyphicon glyphicon-remove"></span>
                        </button>
                    </td>
                </tr>
                <tr>
                    <th class="text-center">Source of loan</th>
                    <th class="text-center">Mortgate value</th>
                    <th class="text-center">Interest type</th>
                    <th class="text-center">Interest rate</th>
                    <th class="text-center">From</th>
                    <th class="text-center">To</th>
                    <th class="text-center">Total payment period (month)</th>
                    <th class="text-center">Monthly Orginary Payment</th>
                    <th class="text-center">Monthly Interest Payment</th>
                    <th class="text-center">Monthly payment</th>
                    <th class="text-center">Annual payment</th>
                    <th class="text-center">Remained value</th>
                    <th class="text-center" style="vertical-align: middle">
                        <button type="button" class="btn btn-primary create-new-loan" data-real-estate-id="@item.Business.Id">
                            <span class="glyphicon glyphicon-plus"></span>
                        </button>
                    </th>
                </tr>
                if (item.ListLoanViewModel != null && item.ListLoanViewModel.Count > 0)
                {
                    foreach (var loanViewModel in item.ListLoanViewModel.Where(x => !x.Loan.ParentLoanId.HasValue))
                    {
                        <tr class="rs-@rsCount child-@childCount">
                            <td><a class="update-loan" href="#" data-loan-id="@loanViewModel.Loan.Id" data-trigger="edit-no-rate">@loanViewModel.Loan.Source</a></td>
                            <td>
                                <a class="update-loan" href="#" data-loan-id="@loanViewModel.Loan.Id" data-trigger="edit-no-rate">@FormatUtility.DisplayThousandSeparatorsForNumber(loanViewModel.Loan.MortgageValue)</a>
                            <td>
                                <a class="update-loan" href="#" data-loan-id="@loanViewModel.Loan.Id" data-trigger="edit-no-rate">@loanViewModel.Loan.InterestType</a>
                            </td>
                            <td>
                                <a class="update-loan" href="#" data-loan-id="@loanViewModel.Loan.Id" data-trigger="edit-rate">@FormatUtility.DisplayPercentageForNumber(loanViewModel.CurrentInterestRate)</a>
                            </td>
                            <td>
                                <a class="update-loan" href="#" data-loan-id="@loanViewModel.Loan.Id" data-trigger="edit-no-rate">@loanViewModel.Loan.StartDate.ToString("MM/yyyy")</a>
                            </td>
                            <td>
                                <a class="update-loan" href="#" data-loan-id="@loanViewModel.Loan.Id" data-trigger="edit-no-rate">@loanViewModel.Loan.EndDate.ToString("MM/yyyy")</a>
                            </td>
                            <td>@FormatUtility.DisplayThousandSeparatorsForNumber(loanViewModel.TotalPaymentPeriod)</td>
                            <td>
                                @FormatUtility.DisplayThousandSeparatorsForNumber(loanViewModel.MonthlyOriginalPayment)
                            </td>
                            <td><a href="#" class="interest-info" data-loan-id="@loanViewModel.Loan.Id">@FormatUtility.DisplayThousandSeparatorsForNumber(loanViewModel.MonthlyInterestPayment)</a></td>
                            <td>@FormatUtility.DisplayThousandSeparatorsForNumber(loanViewModel.MonthlyPayment)</td>
                            <td>@FormatUtility.DisplayThousandSeparatorsForNumber(loanViewModel.AnnualPayment)</td>
                            <td>@FormatUtility.DisplayThousandSeparatorsForNumber(loanViewModel.RemainedValue)</td>
                            <td class="text-center" width="200" style="vertical-align: middle">
                                @*<button class="btn btn-success update-loan" data-loan-id="@loanViewModel.Loan.Id">
                                        <span class="glyphicon glyphicon-pencil"></span>
                                    </button>*@
                                <button class="btn btn-danger delete-loan" data-loan-id="@loanViewModel.Loan.Id">
                                    <span class="glyphicon glyphicon-remove"></span>
                                </button>
                                <button class="btn btn-primary" href=".detail-@count" data-toggle="collapse">
                                    <span class="glyphicon glyphicon-zoom-in"></span>
                                </button>
                            </td>
                        </tr>
                        foreach (var childLoanViewModel in item.ListLoanViewModel.Where(x => x.Loan.ParentLoanId == loanViewModel.Loan.Id).OrderBy(x => x.Loan.StartDate))
                        {
                            if (childLoanViewModel.MonthlyOriginalPayment > 0)
                            {
                                <tr class="detail-@count rs-@rsCount child-@childCount collapse">
                                    <td style="background-color: aquamarine"></td>
                                    <td style="background-color: aquamarine"></td>
                                    <td style="background-color: aquamarine"></td>
                                    <td style="background-color: aquamarine">@FormatUtility.DisplayPercentageForNumber(childLoanViewModel.CurrentInterestRate)</td>
                                    <td style="background-color: aquamarine">@childLoanViewModel.Loan.StartDate.ToString("MM/yyyy")</td>
                                    <td style="background-color: aquamarine">@childLoanViewModel.Loan.EndDate.ToString("MM/yyyy")</td>
                                    <td style="background-color: aquamarine">@FormatUtility.DisplayThousandSeparatorsForNumber(childLoanViewModel.TotalPaymentPeriod)</td>
                                    <td style="background-color: aquamarine">@FormatUtility.DisplayThousandSeparatorsForNumber(loanViewModel.MonthlyOriginalPayment)</td>
                                    <td style="background-color: aquamarine"><a href="#" class="interest-info" data-loan-id="@childLoanViewModel.Loan.Id">@FormatUtility.DisplayThousandSeparatorsForNumber(childLoanViewModel.MonthlyInterestPayment)</a></td>
                                    <td style="background-color: aquamarine">@FormatUtility.DisplayThousandSeparatorsForNumber(childLoanViewModel.MonthlyPayment)</td>
                                    <td style="background-color: aquamarine">@FormatUtility.DisplayThousandSeparatorsForNumber(childLoanViewModel.AnnualPayment)</td>
                                    <td style="background-color: aquamarine">@FormatUtility.DisplayThousandSeparatorsForNumber(childLoanViewModel.RemainedValue)</td>
                                    <td class="text-center" width="200" style="vertical-align: middle; background-color: aquamarine;"></td>
                                </tr>
                            }
                            else
                            {
                                <tr class="detail-@count rs-@rsCount child-@childCount collapse">
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td>@FormatUtility.DisplayPercentageForNumber(childLoanViewModel.CurrentInterestRate)</td>
                                    <td>@childLoanViewModel.Loan.StartDate.ToString("MM/yyyy")</td>
                                    <td>@childLoanViewModel.Loan.EndDate.ToString("MM/yyyy")</td>
                                    <td>@FormatUtility.DisplayThousandSeparatorsForNumber(childLoanViewModel.TotalPaymentPeriod)</td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                </tr>
                            }
                            { childCount++; }
                        }
                        { count++; }
                    }
                    <tr>
                        <td class="text-center"><strong>Total value</strong></td>
                        <td></td>
                        <td><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(item.TotalMorgageValue)</strong></td>
                        <td></td>
                        <td><strong>@FormatUtility.DisplayPercentageForNumber(item.AverageInterestRate)</strong></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(item.TotalOriginalPayment)</strong></td>
                        <td><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(item.TotalInterestPayment)</strong></td>
                        <td><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(item.TotalMonthlyPayment)</strong></td>
                        <td><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(item.TotalAnnualPayment)</strong></td>
                        <td><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(item.TotalRemainingValue)</strong></td>
                        <td></td>
                    </tr>
                }
                else
                {
                    <tr>
                        <td class="text-center" colspan="13">No loan available</td>
                    </tr>
                }
                { rsCount++; }
            }
        }
        else
        {
            <tr>
                <td class="text-center" colspan="14">No real estate income available</td>
            </tr>
        }
    </tbody>
</table>
