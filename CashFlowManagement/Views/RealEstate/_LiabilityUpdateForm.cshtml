@model CashFlowManagement.Models.RealEstateLiabilityCreateViewModel
@using CashFlowManagement.Constants

<div id="liability-form-div" class="col-md-4">
    @using (Ajax.BeginForm("_LiabilityUpdateForm", null, new AjaxOptions { HttpMethod = "Post", OnSuccess = "LiabilityUpdateSuccess(data)" }, new { @id = "liability-form" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-group">
            @Html.HiddenFor(x => x.Id)
            @Html.LabelFor(x => x.Source)
            @Html.TextBoxFor(x => x.Source, new { @class = "form-control input-sm" })
            @Html.ValidationMessageFor(x => x.Source, null, new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.Value)
            @Html.EditorFor(x => x.Value, new { htmlAttributes = new { @class = "form-control input-sm input-mask" } })
            @Html.ValidationMessageFor(x => x.Value, null, new { @class = "text-danger" })
            @Html.ValidationMessage("CompareRealEstateValueAndLiabilityValue", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.InterestType)
            @Html.DropDownListFor(x => x.InterestType, Constants.InterestType(), new { @class = "form-control input-sm " })
        </div>
        <div class="form-group">
            <div class="col-md-12" style="padding-left: 0; padding-right: 0;">
                @Html.LabelFor(x => x.InterestRate)
            </div>
            <div class="col-md-7" style="padding-left: 0; padding-right: 5px; margin-bottom: 15px;">
                <div class="input-group input-group-sm">
                    @Html.EditorFor(x => x.InterestRate, new { htmlAttributes = new { @class = "form-control input-sm percentage" } })
                    <div class="input-group-addon">
                        <span class="fa fa-percent"></span>
                    </div>
                </div>
            </div>
            <div class="col-md-5" style="padding-left: 0px; padding-right: 0; margin-bottom: 15px;">
                @Html.DropDownListFor(x => x.InterestRatePerX, Constants.InterestPerX(), new { @class = "form-control input-sm" })
            </div>
            @Html.ValidationMessageFor(x => x.InterestRate, null, new { @class = "text-danger" })
            @Html.ValidationMessageFor(x => x.InterestRatePerX, null, new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.StartDate)
            <div class="input-group input-group-sm">
                @Html.EditorFor(x => x.StartDate, new { htmlAttributes = new { @class = "form-control input-sm date-picker-with-day" } })
                <div class="input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </div>
            </div>
            @Html.ValidationMessageFor(x => x.StartDate, null, new { @class = "text-danger" })
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.EndDate)
            <div class="input-group input-group-sm">
                @Html.EditorFor(x => x.EndDate, new { htmlAttributes = new { @class = "form-control input-sm date-picker-with-day" } })
                <div class="input-group-addon">
                    <sspan class="glyphicon glyphicon-calendar"></sspan>
                </div>
            </div>
            @Html.ValidationMessageFor(x => x.EndDate, null, new { @class = "text-danger" })
        </div>
        <div class="form-group text-right">
            <button type="submit" class="btn btn-primary">
                <span class="glyphicon glyphicon-ok"></span>
                Cập nhật khoản nợ
            </button>
            <button type="button" class="btn btn-default reset-form">
                <span class="glyphicon glyphicon-remove"></span>
                Nhập lại thông tin
            </button>
        </div>
    }
</div>

