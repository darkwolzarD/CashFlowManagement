@model CashFlowManagement.ViewModels.AssetListViewModel
@using CashFlowManagement.Utilities
@using CashFlowManagement.EntityModel
@using CashFlowManagement.Constants
@using CashFlowManagement.ViewModels
@{
    ViewBag.Title = "Report";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<ol class="breadcrumb">
    <li class="active">Tài sản</li>
    <li class="active"></li>
</ol>

<div class="background">
    <div class="text-right">
        <button type="button" class="btn btn-default btn-compact-view" data-asset-type="@Model.Type">
            <span class="glyphicon glyphicon-th-large"></span>
        </button>
        <button type="button" class="btn btn-default btn-detail-view" data-asset-type="@Model.Type">
            <span class="glyphicon glyphicon-th"></span>
        </button>
    </div>
    <div class="asset-table">
        <table class="table table-bordered table-condensed table-responsive">
            <thead>
                <tr>
                    @if (Model.Type == (int)Constants.ASSET_TYPE.BANK_DEPOSIT)
                    {
                        <th>Tài khoản tiết kiệm</th>
                        <th>Thu nhập tháng</th>
                        <th>Thu nhập năm</th>
                        <th>Tổng vốn</th>
                        <th>Lãi suất tiền gửi</th>
                        <th>Participant bank</th>
                        <th>Ghi chú</th>
                        <th></th>
                    }
                    else if (Model.Type == (int)Constants.ASSET_TYPE.REAL_ESTATE)
                    {
                        <th class="text-center">Bất động sản</th>
                        <th class="text-center">Thu hàng tháng</th>
                        <th class="text-center">Thu hàng năm</th>
                        <th class="text-center">Giá trị tài sản</th>
                        <th class="text-center">Tỷ suất lợi nhuận cho thuê</th>
                        <th class="text-center">Giá trị tiền vay</th>
                        <th class="text-center">Chi phí lãi vay</th>
                        <th class="text-center">Phải trả hàng tháng</th>
                        <th class="text-center">Phải trả hàng năm</th>
                        <th class="text-center">Số tiền gốc còn phải trả</th>
                    }
                    else if (Model.Type == (int)Constants.ASSET_TYPE.BUSINESS)
                    {
                        <th class="text-center">Kinh doanh</th>
                        <th class="text-center" colspan="2">Thu hàng tháng</th>
                        <th class="text-center" colspan="2">Thu hàng năm</th>
                        <th class="text-center" colspan="2">Giá trị góp vốn</th>
                        <th class="text-center" colspan="2">Tỷ suất lợi nhuận</th>
                        <th class="text-center" colspan="4">Chỉnh sửa</th>
                        <th class="text-center"><strong>Hôm nay: @(DateTime.Now.ToString("MM/yyyy"))</strong></th>
                    }
                    else if (Model.Type == (int)Constants.ASSET_TYPE.OTHERS)
                    {
                        <th class="text-center">Tài sản khác</th>
                        <th class="text-center">Thu nhập hàng tháng</th>
                        <th class="text-center">Thu nhập hàng năm</th>
                        <th class="text-center">Tổng giá trị</th>
                        <th class="text-center">Tỷ suất sinh lời</th>
                        <th class="text-center" colspan="4">Chỉnh sửa</th>
                    }
                </tr>
            </thead>
            <tbody>
                @if (Model.List.Any())
                {
                    <tr>
                        <td style="color: red;"><strong>Tổng</strong></td>
                        <td style="color: red;"><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(Model.TotalMonthlyIncome)</strong></td>
                        <td style="color: red;"><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(Model.TotalMonthlyIncome * 12)</strong></td>
                        <td style="color: red;"><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(Model.TotalValue)</strong></td>
                        <td style="color: red;"><strong>@FormatUtility.DisplayPercentageForNumber(Model.TotalMonthlyIncome / Model.TotalValue * 1200)</strong></td>
                        <td style="color: red;"><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(Model.List.Select(x => x.TotalMortgageValue).DefaultIfEmpty(0).Sum())</strong></td>
                        <td style="color: red;"><strong>@FormatUtility.DisplayPercentageForNumber(Model.List.Select(x => x.TotalAnnualPayment).DefaultIfEmpty(0).Sum() / Model.List.Select(x => x.TotalMortgageValue).DefaultIfEmpty(0).Sum() * 100)</strong></td>
                        <td style="color: red;"><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(Model.List.Select(x => x.TotalMonthlyPayment).DefaultIfEmpty(0).Sum())</strong></td>
                        <td style="color: red;"><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(Model.List.Select(x => x.TotalAnnualPayment).DefaultIfEmpty(0).Sum())</strong></td>
                        <td style="color: red;"><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(Model.List.Select(x => x.TotalRemainingValue).DefaultIfEmpty(0).Sum())</strong></td>
                        <td></td>
                    </tr>
                    foreach (var item in Model.List)
                    {
                        <tr>
                            <td>@item.Asset.AssetName</td>
                            <td>@FormatUtility.DisplayThousandSeparatorsForNumber(item.Income.Value)</td>
                            <td>@FormatUtility.DisplayThousandSeparatorsForNumber(item.Income.Value * 12)</td>
                            <td>@FormatUtility.DisplayThousandSeparatorsForNumber(item.Asset.Value)</td>
                            <td>@FormatUtility.DisplayPercentageForNumber(item.Income.Value / item.Asset.Value * 1200)</td>
                            <td>@FormatUtility.DisplayThousandSeparatorsForNumber(item.TotalMortgageValue)</td>
                            <td>@FormatUtility.DisplayThousandSeparatorsForNumber(item.AverageInterestRate)</td>
                            <td>@FormatUtility.DisplayThousandSeparatorsForNumber(item.TotalMonthlyPayment)</td>
                            <td>@FormatUtility.DisplayThousandSeparatorsForNumber(item.TotalAnnualPayment)</td>
                            <td>@FormatUtility.DisplayThousandSeparatorsForNumber(item.TotalRemainingValue)</td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="14" class="text-center">Không có dữ liệu</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
