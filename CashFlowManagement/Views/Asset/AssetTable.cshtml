@model CashFlowManagement.ViewModels.AssetListViewModel
@using CashFlowManagement.Utilities
@using CashFlowManagement.EntityModel
@using CashFlowManagement.Constants
@using CashFlowManagement.ViewModels
@{
    ViewBag.Title = "AssetTable";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    string title = string.Empty;
    string type = string.Empty;
    if (Model.Type == (int)Constants.ASSET_TYPE.BANK_DEPOSIT)
    {
        title = "Chi tiết các tài khoản tiết kiệm";
    }
    else if (Model.Type == (int)Constants.ASSET_TYPE.REAL_ESTATE)
    {
        title = "Chi tiết các bất động sản";
    }
    else if (Model.Type == (int)Constants.ASSET_TYPE.BUSINESS)
    {
        title = "Chi tiết kinh doanh";
    }
    else if (Model.Type == (int)Constants.ASSET_TYPE.OTHERS)
    {
        title = "Chi tiết các tài sản khác";
    }
    int count = 0;
    int rsCount = 0;
    int childCount = 0;
}


<ol class="breadcrumb">
    <li class="active">Tài sản</li>
    <li class="active">@title</li>
</ol>

<div class="background">
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#create-new-asset-modal">
        <span class="glyphicon glyphicon-plus"></span>
        Tạo mới
    </button>
    @if (Model.Type == (int)Constants.ASSET_TYPE.REAL_ESTATE)
    {
        <button type="button" class="btn btn-success" data-toggle="modal" data-target="#buy-new-asset-modal">
            <span class="glyphicon glyphicon-home"></span>
            Mua mới
        </button>
    }
    <div class="asset-table">
        <table class="table table-bordered table-condensed table-responsive">
            <thead>
                <tr>
                    @if (Model.Type == (int)Constants.ASSET_TYPE.BANK_DEPOSIT)
                    {
                        <th>Tài khoản tiết kiệm</th>
                        <th>Thu nhập tháng</th>
                                    <th>Thu nhập năm</th>
                                    <th>Tổng vốn</th>
                                    <th>Lãi suất tiền gửi</th>
                                    <th>Participant bank</th>
                                    <th>Ghi chú</th>
                                    <th></th>
                    }
                    else if (Model.Type == (int)Constants.ASSET_TYPE.REAL_ESTATE)
                    {
                        <th class="text-center">Bất động sản</th>
                        <th class="text-center" colspan="2">Thu nhập hàng tháng cho thuê</th>
                                    <th class="text-center" colspan="2">Thu nhập hàng năm cho thuê</th>
                                    <th class="text-center" colspan="2">Trị giá tài sản</th>
                                    <th class="text-center" colspan="2">Tỷ suất lợi nhuận cho thuê</th>
                                    <th class="text-center" colspan="4">Chỉnh sửa</th>
                                    <th class="text-center"><strong>Hôm nay: @(DateTime.Now.ToString("MM/yyyy"))</strong></th>
                    }
                    else if (Model.Type == (int)Constants.ASSET_TYPE.BUSINESS)
                    {
                        <th class="text-center">Kinh doanh</th>
                        <th class="text-center" colspan="2">Thu hàng tháng</th>
                                    <th class="text-center" colspan="2">Thu hàng năm</th>
                                    <th class="text-center" colspan="2">Giá trị góp vốn</th>
                                    <th class="text-center" colspan="2">Tỷ suất lợi nhuận</th>
                                    <th class="text-center" colspan="4">Chỉnh sửa</th>
                                    <th class="text-center"><strong>Hôm nay: @(DateTime.Now.ToString("MM/yyyy"))</strong></th>
                    }
                    else if (Model.Type == (int)Constants.ASSET_TYPE.OTHERS)
                    {
                        <th class="text-center">Tài sản khác</th>
                        <th class="text-center">Thu nhập hàng tháng</th>
                                    <th class="text-center">Thu nhập hàng năm</th>
                                    <th class="text-center">Tổng giá trị</th>
                                    <th class="text-center">Tỷ suất sinh lời</th>
                                    <th class="text-center" colspan="4">Chỉnh sửa</th>
                    }
                </tr>
            </thead>
            <tbody>
                @if (Model.List.Any())
                {
                    foreach (var item in Model.List)
                    {
                        <tr class="rs-@rsCount">
                            <td class="@(Model.Type == (int)Constants.ASSET_TYPE.REAL_ESTATE || Model.Type == (int)Constants.ASSET_TYPE.BUSINESS ? "text-center" : string.Empty)" style="vertical-align: middle" rowspan="@(Model.Type == (int)Constants.ASSET_TYPE.REAL_ESTATE || Model.Type == (int)Constants.ASSET_TYPE.BUSINESS ? item.LiabilityList != null && item.LiabilityList.List.Where(x => !x.Liability.ParentLiabilityId.HasValue).Count() > 0 ? item.LiabilityList.List.Where(x => !x.Liability.ParentLiabilityId.HasValue).Count() + 2 : 3 : 1)" width="120">@item.Asset.AssetName</td>
                            <td colspan="@(Model.Type == (int)Constants.ASSET_TYPE.REAL_ESTATE || Model.Type == (int)Constants.ASSET_TYPE.BUSINESS ? 2 : 1)">@FormatUtility.DisplayThousandSeparatorsForNumber(item.Income.Value)</td>
                            <td colspan="@(Model.Type == (int)Constants.ASSET_TYPE.REAL_ESTATE || Model.Type == (int)Constants.ASSET_TYPE.BUSINESS ? 2 : 1)">@FormatUtility.DisplayThousandSeparatorsForNumber(item.Income.Value * 12)</td>
                            <td colspan="@(Model.Type == (int)Constants.ASSET_TYPE.REAL_ESTATE || Model.Type == (int)Constants.ASSET_TYPE.BUSINESS ? 2 : 1)">@FormatUtility.DisplayThousandSeparatorsForNumber(item.Asset.Value)</td>
                            <td colspan="@(Model.Type == (int)Constants.ASSET_TYPE.REAL_ESTATE || Model.Type == (int)Constants.ASSET_TYPE.BUSINESS ? 2 : 1)">@FormatUtility.DisplayPercentageForNumber(item.Income.Value / item.Asset.Value * 100)</td>
                            @if (item.Asset.AssetType == (int)Constants.ASSET_TYPE.BANK_DEPOSIT)
                            {
                                <td>@item.Asset.ParticipantBank</td>
                                <td>@item.Asset.Note</td>
                            }
                            <td class="text-center" colspan="@(Model.Type == (int)Constants.ASSET_TYPE.REAL_ESTATE || Model.Type == (int)Constants.ASSET_TYPE.BUSINESS ? 4 : 1)"  width="160px">
                                <button class="btn btn-success update-asset" data-asset-id="@item.Asset.Id">
                                    <span class="glyphicon glyphicon-pencil"></span>
                                    Cập nhật
                                </button>
                                <button class="btn btn-danger delete-asset" data-asset-id="@item.Asset.Id">
                                    <span class="glyphicon glyphicon-remove"></span>
                                    Xóa
                                </button>
                            </td>
                            @if (item.Asset.AssetType == (int)Constants.ASSET_TYPE.REAL_ESTATE ||
                    item.Asset.AssetType == (int)Constants.ASSET_TYPE.BUSINESS)
                            {
                                <td></td>
                            }
                        </tr>
                        if (item.Asset.AssetType == (int)Constants.ASSET_TYPE.REAL_ESTATE ||
                            item.Asset.AssetType == (int)Constants.ASSET_TYPE.BUSINESS)
                        {
                            <tr>
                                <th class="text-center">Nguồn vay nợ</th>
                                <th class="text-center">Giá trị nợ</th>
                                <th class="text-center">Loại lãi suất</th>
                                <th class="text-center">Lãi vay</th>
                                <th class="text-center">Ngày bắt đầu vay</th>
                                <th class="text-center">Ngày trả hết nợ</th>
                                <th class="text-center">Tổng số tháng phải trả</th>
                                <th class="text-center">Trả gốc hàng tháng</th>
                                <th class="text-center">Trả lãi hàng tháng</th>
                                <th class="text-center">Tổng phải trả hàng tháng</th>
                                <th class="text-center">Tổng phải trả hàng năm</th>
                                <th class="text-center">Nợ gốc còn phải trả</th>
                                <th class="text-center" style="vertical-align: middle">
                                    <button type="button" class="btn btn-primary create-new-liability" data-asset-id="@item.Asset.Id" data-asset-type="@Model.Type">
                                        <span class="glyphicon glyphicon-plus"></span>
                                        Vay
                                    </button>
                                </th>
                            </tr>
                            if (item.LiabilityList != null && item.LiabilityList.List.Count > 0)
                            {
                                foreach (var liabilityViewModel in item.LiabilityList.List.Where(x => !x.Liability.ParentLiabilityId.HasValue))
                                {
                                    <tr class="rs-@rsCount child-@childCount">
                                        <td><a class="update-liability" href="#" data-liability-id="@liabilityViewModel.Liability.Id" data-trigger="edit-no-rate">@liabilityViewModel.Liability.Name</a></td>
                                        <td>
                                            <a class="update-liability" href="#" data-liability-id="@liabilityViewModel.Liability.Id" data-trigger="edit-no-rate">@FormatUtility.DisplayThousandSeparatorsForNumber(liabilityViewModel.Liability.Value)</a>
                                        </td>
                                        <td>
                                            <a class="update-liability" href="#" data-liability-id="@liabilityViewModel.Liability.Id" data-trigger="edit-no-rate">
                                                @if (liabilityViewModel.Liability.InterestType == 1)
                                                {
                                                    @Html.Raw("Cố định")
                                                }
                                                else if (liabilityViewModel.Liability.InterestType == 2)
                                                {
                                                    @Html.Raw("Giảm dần")
                                                }
                                            </a>
                                        </td>
                                        <td>
                                            <a class="update-liability" href="#" data-liability-id="@liabilityViewModel.Liability.Id" data-trigger="edit-rate">@FormatUtility.DisplayPercentageForNumber(liabilityViewModel.CurrentInterestRate)</a>
                                        </td>
                                        <td>
                                            <a class="update-liability" href="#" data-liability-id="@liabilityViewModel.Liability.Id" data-trigger="edit-no-rate">@liabilityViewModel.Liability.StartDate.ToString("MM/yyyy")</a>
                                        </td>
                                        <td>
                                            <a class="update-liability" href="#" data-liability-id="@liabilityViewModel.Liability.Id" data-trigger="edit-no-rate">@liabilityViewModel.Liability.EndDate.ToString("MM/yyyy")</a>
                                        </td>
                                        <td>@FormatUtility.DisplayThousandSeparatorsForNumber(liabilityViewModel.TotalPaymentPeriod)</td>
                                        <td>
                                            @FormatUtility.DisplayThousandSeparatorsForNumber(liabilityViewModel.MonthlyOriginalPayment)
                                        </td>
                                        <td><a href="#" class="interest-info" data-liability-id="@liabilityViewModel.Liability.Id">@FormatUtility.DisplayThousandSeparatorsForNumber(liabilityViewModel.MonthlyInterestPayment)</a></td>
                                        <td>@FormatUtility.DisplayThousandSeparatorsForNumber(liabilityViewModel.MonthlyPayment)</td>
                                        <td>@FormatUtility.DisplayThousandSeparatorsForNumber(liabilityViewModel.AnnualPayment)</td>
                                        <td>@FormatUtility.DisplayThousandSeparatorsForNumber(liabilityViewModel.RemainedValue)</td>
                                        <td class="text-center" width="150" style="vertical-align: middle">
                                            @*<button class="btn btn-success update-loan" data-loan-id="@loanViewModel.Loan.Id">
                                                    <span class="glyphicon glyphicon-pencil"></span>
                                                </button>*@
                                            <button class="btn btn-danger delete-liability" data-liability-id="@liabilityViewModel.Liability.Id">
                                                <span class="glyphicon glyphicon-remove"></span>
                                                Xóa
                                            </button>
                                            <button class="btn btn-warning" href=".detail-@count" data-toggle="collapse">
                                                <span class="glyphicon glyphicon-zoom-in"></span>
                                                Chi tiết
                                            </button>
                                        </td>
                                    </tr>
                                    foreach (var childLiabilityViewModel in item.LiabilityList.List.Where(x => x.Liability.ParentLiabilityId == liabilityViewModel.Liability.Id).OrderBy(x => x.Liability.StartDate))
                                    {
                                        if (childLiabilityViewModel.MonthlyOriginalPayment > 0)
                                        {
                                            <tr class="detail-@count rs-@rsCount child-@childCount collapse success">
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td>@FormatUtility.DisplayPercentageForNumber(childLiabilityViewModel.CurrentInterestRate)</td>
                                                <td>@childLiabilityViewModel.Liability.StartDate.ToString("MM/yyyy")</td>
                                                <td>@childLiabilityViewModel.Liability.EndDate.ToString("MM/yyyy")</td>
                                                <td>@FormatUtility.DisplayThousandSeparatorsForNumber(childLiabilityViewModel.TotalPaymentPeriod)</td>
                                                <td>@FormatUtility.DisplayThousandSeparatorsForNumber(liabilityViewModel.MonthlyOriginalPayment)</td>
                                                <td><a href="#" class="interest-info" data-loan-id="@childLiabilityViewModel.Liability.Id">@FormatUtility.DisplayThousandSeparatorsForNumber(childLiabilityViewModel.MonthlyInterestPayment)</a></td>
                                                <td>@FormatUtility.DisplayThousandSeparatorsForNumber(childLiabilityViewModel.MonthlyPayment)</td>
                                                <td>@FormatUtility.DisplayThousandSeparatorsForNumber(childLiabilityViewModel.AnnualPayment)</td>
                                                <td>@FormatUtility.DisplayThousandSeparatorsForNumber(childLiabilityViewModel.RemainedValue)</td>
                                                <td class="text-center" width="100" style="vertical-align: middle;"></td>
                                            </tr>
                                        }
                                        else
                                        {
                                            <tr class="detail-@count rs-@rsCount child-@childCount collapse">
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td>@FormatUtility.DisplayPercentageForNumber(childLiabilityViewModel.CurrentInterestRate)</td>
                                                <td>@childLiabilityViewModel.Liability.StartDate.ToString("MM/yyyy")</td>
                                                <td>@childLiabilityViewModel.Liability.EndDate.ToString("MM/yyyy")</td>
                                                <td>@FormatUtility.DisplayThousandSeparatorsForNumber(childLiabilityViewModel.TotalPaymentPeriod)</td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                                <td></td>
                                            </tr>
                                        }
                                        {
                                            childCount++;
                                        }
                                    }
                                    {
                                        count++;
                                    }
                                }
                                <tr>
                                    <td class="text-center"><strong>Tổng</strong></td>
                                    <td></td>
                                    <td><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(item.TotalMortgageValue)</strong></td>
                                    <td></td>
                                    <td><strong>@FormatUtility.DisplayPercentageForNumber(item.AverageInterestRate)</strong></td>
                                    <td></td>
                                    <td></td>
                                    <td></td>
                                    <td><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(item.TotalOriginalPayment)</strong></td>
                                    <td><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(item.TotalInterestPayment)</strong></td>
                                    <td><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(item.TotalMonthlyPayment)</strong></td>
                                    <td><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(item.TotalAnnualPayment)</strong></td>
                                    <td><strong>@FormatUtility.DisplayThousandSeparatorsForNumber(item.TotalRemainingValue)</strong></td>
                                    <td></td>
                                </tr>
                            }
                            else
                            {
                                <tr>
                                    <td colspan="13" class="text-center">Không có khoản nợ</td>
                                </tr>
                            }
                            {
                                rsCount++;
                            }
                        }
                    }
                }
                else
                {
                    <tr>
                        <td colspan="14" class="text-center">Không có dữ liệu</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="asset-modal">
    @{ Html.RenderPartial("_AssetModal", new AssetViewModel
        {
            Asset = new Assets { AssetType = Model.Type },
            Income = new Incomes()
        }); }
</div>

<div class="update-modal">

</div>

<div class="liability-modal">

</div>

<div class="update-liability-modal-div">

</div>

<div class="interest-modal-div">

</div>

@if (Model.Type == (int)Constants.ASSET_TYPE.REAL_ESTATE)
{
    <div class="buy-asset-modal">
        @{ Html.RenderPartial("_BuyAssetModal", new AssetViewModel
            {
                Asset = new Assets { AssetType = Model.Type },
                Income = new Incomes()
            }); }
    </div>
}

<script type="text/javascript" src="~/Scripts/asset.js"></script>
<script type="text/javascript">
    var Url = new Object();
    Url.CreateAsset = '@Url.Action("CreateAsset", "Asset")';
    Url.LoadTable = '@Url.Action("AssetTable", "Asset")';
    Url.LoadAsset = '@Url.Action("_AssetUpdateModal", "Asset")';
    Url.UpdateAsset = '@Url.Action("UpdateAsset", "Asset")';
    Url.BuyAsset = '@Url.Action("BuyAsset", "Asset")';
    Url.DeleteAsset = '@Url.Action("DeleteAsset", "Asset")';
    Url.LiabilityModal = '@Url.Action("_LiabilityModal", "Liability")';
    Url.CreateLiability = '@Url.Action("CreateLiability", "Liability")';
    Url.LoadLiability = '@Url.Action("_LiabilityUpdateModal", "Liability")';
    Url.UpdateLiability = '@Url.Action("UpdateLiability", "Liability")';
    Url.DeleteLiability = '@Url.Action("DeleteLiability", "Liability")';
    Url.PaymentPerMonth = '@Url.Action("_PaymentPerMonth", "Liability")';
    var assetType = @Model.Type;
</script>

