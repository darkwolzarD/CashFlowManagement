@model CashFlowManagement.Models.InsuranceCreateViewModel
@using CashFlowManagement.Constants
@{
    Layout = null;
}

<div id="insurance-create-modal" class="modal fade" role="dialog" data-backdrop="static" data-keyboard="true">
    <div class="modal-dialog" style="width: 350px;">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" style="font-size: 26px !important; color: red !important">&times;</button>
                <p style="font-size: 16px; margin-bottom: 0px;">Khởi tạo bảo hiểm</p>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div id="insurance-div" class="col-md-12">
                        @using (Html.BeginForm("_InsuranceForm", "Insurance", FormMethod.Post, new { @id = "insurance-form" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-group">
                                @Html.LabelFor(x => x.Name)
                                @Html.TextBoxFor(x => x.Name, new { @class = "form-control input-sm" })
                                @Html.ValidationMessageFor(x => x.Name, null, new { @class = "text-danger" })
                                <p class="note text-danger">VD: Dai-ichi-life, Prudential...</p>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.Value)
                                @Html.EditorFor(x => x.Value, new { htmlAttributes = new { @class = "form-control input-mask input-sm" } })
                                @Html.ValidationMessageFor(x => x.Value, null, new { @class = "text-danger" })
                                @Html.ValidationMessage("CheckValueAndTotalExpenseError", new { @class = "text-danger" })
                                <p class="note text-danger">VD: 1.000.000.000</p>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.StartDate)
                                <div class="input-group input-group-sm">
                                    @Html.EditorFor(x => x.StartDate, new { htmlAttributes = new { @class = "form-control input-sm date-picker-with-day" } })
                                    <div class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(x => x.StartDate, null, new { @class = "text-danger" })
                                @Html.ValidationMessage("CheckStartDate", new { @class = "text-danger" })
                                <p class="note text-danger">VD: 01/04/2010</p>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.EndDate)
                                <div class="input-group input-group-sm">
                                    @Html.EditorFor(x => x.EndDate, new { htmlAttributes = new { @class = "form-control input-sm date-picker-with-day" } })
                                    <div class="input-group-addon">
                                        <span class="glyphicon glyphicon-calendar"></span>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(x => x.EndDate, null, new { @class = "text-danger" })
                                @Html.ValidationMessage("CheckEndDate", new { @class = "text-danger" })
                                <p class="note text-danger">VD: 01/04/2028</p>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.Expense)
                                @Html.EditorFor(x => x.Expense, new { htmlAttributes = new { @class = "form-control input-mask input-sm" } })
                                @Html.ValidationMessageFor(x => x.Expense, null, new { @class = "text-danger" })
                                <p class="note text-danger">VD: 4.000.000</p>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.Note)
                                @Html.TextAreaFor(x => x.Note, new { @class = "form-control" })
                                @Html.ValidationMessageFor(x => x.Note, null, new { @class = "text-danger" })
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success create-insurance">
                    <span class="glyphicon glyphicon-ok"></span>
                    Tạo bảo hiểm
                </button>
            </div>
        </div>
    </div>
</div>


